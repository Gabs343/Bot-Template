@startuml  
skinparam {
    linetype ortho
    ArrowColor SeaGreen
}

package Bot{
    class Exception{}
    class ServiceNotFound{}

    class Main{
        - settings_services: list[SettingService]
        - logs_services: list[LogService]
        - bot_name: str
        - status: str
        - status_callback: def
        + start(*args): None
        + pause(): None
        + unpause(): None
        + stop(): None
        - notify_status(new_status: str): None
        - get_log_service(log_type: LogService): LogService
        - get_setting_service(setting_type: SettingService): SettingService
        - get_settings_services(): list[SettingService]
        - execution_begun(): None
        - execution_completed(had_error: bool): None
        - execute_action(function: def, *args): Any
        - close_logs(): None
    }

    abstract SettingService{
        - settings: dict
    }

    abstract LogService{
        + create(): None
        + write_info(message: str): None
        + write_error(message: str, detail: str = None): None
        + close(): None
        + create_folder(): None
    }

    class LogTxt{
        - path: str
        - name: str
        - logger: Logger

        + write_and_execute(function, args): None
    }

    class LogXlsx{
        - path: str
        - name: str
        - row: int
        - log: dict

        + write_in_column(column: str, message: str): None
        - style_status(value: str): list[str]
    }
}

Main o-left- SettingService
Main o-down- LogService

LogService <|.left. LogTxt
LogService <|.right. LogXlsx

Exception <|.. ServiceNotFound

@enduml 